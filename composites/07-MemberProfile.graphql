type ModeSetting @loadModel(id: "$MODESETTING_ID") {
  id: ID!
}

type DAOProfile @loadModel(id: "$DAOPROFILE_ID") {
  id: ID!
}

type GenDelegateProfile @loadModel(id: "$GENERALDELEGATEPROFILE_ID") {
  id: ID!
}

type DelegateOfProfile @loadModel(id: "$DELEGATEOFPROFILE_ID") {
  id: ID!
}

# Member is the controller of this model
## This is for reference only - your script will establish model access using an existing deployed composite
type MemberProfile @createModel(
    accountRelation: LIST
    description: "DAO-specific member profile"
  ) {
  author: DID! @documentAccount
  version: CommitID! @documentVersion
  DaoProfile: StreamID! @documentReference(model: "DAOProfile")
  daoProfile: DAOProfile! @relationDocument(property: "DaoProfile")
  Mode: StreamID @documentReference(model: "ModeSetting")
  mode: ModeSetting @relationDocument(property: "Mode")
  generalDelegateProfile: StreamID @documentReference(model: "GenDelegateProfile")
  genProfile: GenDelegateProfile @relationDocument(property: "generalDelegateProfile")
  delegateOfProfile: StreamID @documentReference(model: "DelegateOfProfile")
  delegateOf: DelegateOfProfile @relationDocument(property: "delegateOfProfile")
  memberSummary: String! @string(minLength: 25, maxLength: 100000)
  optionalAddition: String @string(minLength: 25, maxLength: 100000)
}